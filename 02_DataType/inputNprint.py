'''
input()함수: 표준입력(키보드)으로 부터 사용자 입력을 받는 함수.
            이 함수가 실행되기 전까지  Blocking상태가 된다.
            즉 다음 라인의 코드가 실행이 안되고 멈춘다
            입력한 값은 모두 문자열<class 'str'>로 처리된다.

방법1]한번에 하나의 데이타만 입력받기
변수 = input()
변수 = input('안내 메시지')
'''
'''
print('[input()함수]')
print('나이를 입력하세요?',end='')
age = input()
print('age의 값:{},age의 타입:{}'.format(age,type(age)))
'''
'''
age = input('나이를 입력하세요?')
print('age의 값:{},age의 타입:{}'.format(age,type(age)))
'''
''' 
방법2]한번에 여러 데이타를 입력받기
-input()함수에서 문자열 객체의  split()함수(구분자를 기준으로 분리하는 함수로 반환값은 리스트타입)를 호출하여
 여러 개의 변수에 저장(각 변수는 콤마로 구분)
 구분자 생략시 공백을 기준으로 분리한다.

변수1, 변수2,... = input().split() 
변수1, 변수2,... = input().split(구분자)
변수1, 변수2,... = input('안내 메시지').split()
변수1, 변수2,... = input('안내 메시지').split(구분자)
'''
'''
multi = input('값을 여러개 입력하세요?(공백이 디폴트)').split()
print('multi의 값:{},multi의 타입:{}'.format(multi,type(multi)))
'''
'''
a,b = input('콤마를 기준으로 두 개의 숫자를 입력하세요?').split(',') 
c=int(a) + int(b)
print(c)
'''
'''
혹은 입력받은 값을 숫자(정수 혹은 실수)로 변경시 map함수를 이용하면 편리하다
map(함수,리스트 혹은 튜플)는 리스트의 요소를 첫번째 인자로 지정한 함수를 이용해서 
처리해주는 함수이다.
단,튜플일때는  원본 튜플을 변경하는 것이 아니라 새 튜플을 생성한다
변수1, 변수2,... = map(함수명만 혹은 람다식, input().split())
변수1, 변수2,... = map(함수명만 혹은 람다식, input().split(구분자))
변수1, 변수2,... = map(함수명만 혹은 람다식, input('안내 메시지').split())
변수1, 변수2,... = map(함수명만 혹은 람다식, input('안내 메시지').split(구분자))
'''
#a,b = map(int,input('콤마를 기준으로 두 개의 숫자를 입력하세요?').split(','))
a,b = map(lambda x:int(x) * 2,input('콤마를 기준으로 두 개의 숫자를 입력하세요?').split(','))
print('두 숫자의 합(2씩 곱한 값):',a+b)
print('[print()함수]')
'''
※ 콤마로 구분해서 여러개 값을 출력할 수 있다
print(값1, 값2, 값3,..[,sep='문자 또는 문자열'][,end='문자 또는 문자열'][,file=파일포인터])
sep키워드 인수:콤마로 구분된 값을 여러 구분자로 결합하여 출력할 수 있다. (기본값은 공백)
end키워드 인수:출력시 줄바꿈 효과를 변경할 수 있다. (기본값은 \n)
file키워드 인수:출력 결과를 파일, 표준 에러처리로 보낼 수 있다.
'''
#1.여러개 동시에 출력하기:공백(디폴트)
a,b = input('공백 기준 두 개의 값 입력?').split()
print(a,b,'공백')
#2.여러개 동시에 출력하기:sep사용
print(a,b,'공백',sep='★')
print(a,b,'공백',sep='\n')
#3.여러개 동시에 출력하기:sep 및 end 키워드 인수 사용
print(a,b,'공백',sep=',',end='')
print('입니다')
#4.여러개 동시에 출력하기:file 키워드 인수 사용-표준에러 콘솔 출력
import sys
print(a,b,'공백',file=sys.stderr)
#5.여러개 동시에 출력하기:file 키워드 인수 사용-파일로 출력
f=open('output.txt', 'w', encoding='utf-8')
print(a,b,'공백',file=f,sep='\n')
